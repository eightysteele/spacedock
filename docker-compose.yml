# depends on the .env file in the same directory
version: '3.8'
services:
  xdg:
    image: xdg-build
    container_name: xdg-build
    #command: tail -f /dev/null
    build:
      dockerfile: Dockerfile.xdg
      tags:
        - xdg-build
      args:
        - XDG_HOME=${XDG_HOME}
        - XDG_BIN_HOME=${XDG_BIN_HOME}
        - XDG_CONFIG_HOME=${XDG_CONFIG_HOME}
        - XDG_DATA_HOME=${XDG_DATA_HOME}
        - XDG_CACHE_HOME=${XDG_CACHE_HOME}
  emacs:
    image: emacs-build
    container_name: emacs-build
    command: tail -f /dev/null
    build:
      dockerfile: Dockerfile.emacs
      tags:
        - emacs-build
      args:
        - XDG_HOME=${XDG_HOME}
        - XDG_BIN_HOME=${XDG_BIN_HOME}
        - XDG_CONFIG_HOME=${XDG_CONFIG_HOME}
        - XDG_DATA_HOME=${XDG_DATA_HOME}
        - XDG_CACHE_HOME=${XDG_CACHE_HOME}
        - EMACS_DIR=${EMACS_DIR}
        - EMACS_VERSION=${EMACS_VERSION}
    depends_on:
      - xdg
  llvm:
    image: llvm
    container_name: llvm
    command: tail -f /dev/null
    build:
      dockerfile: Dockerfile.llvm
      tags:
        - llvm
      args:
        - XDG_HOME=${XDG_HOME}
        - XDG_BIN_HOME=${XDG_BIN_HOME}
        - XDG_CONFIG_HOME=${XDG_CONFIG_HOME}
        - XDG_DATA_HOME=${XDG_DATA_HOME}
        - XDG_CACHE_HOME=${XDG_CACHE_HOME}
        - LLVM_VERSION=${LLVM_VERSION}
        - NVIDIA_BASE_IMAGE=${NVIDIA_BASE_IMAGE}
    depends_on:
      - xdg
  haskell:
    image: haskell-build
    #container_name: haskell-build
    command: tail -f /dev/null
    build:
      dockerfile: Dockerfile.haskell
      tags:
        - haskell-build
      args:
        - XDG_HOME=${XDG_HOME}
        - XDG_BIN_HOME=${XDG_BIN_HOME}
        - XDG_CONFIG_HOME=${XDG_CONFIG_HOME}
        - XDG_DATA_HOME=${XDG_DATA_HOME}
        - XDG_CACHE_HOME=${XDG_CACHE_HOME}
        - GHCUP_USE_XDG_DIRS=${GHCUP_USE_XDG_DIRS}
        - BOOTSTRAP_HASKELL_NONINTERACTIVE=${BOOTSTRAP_HASKELL_NONINTERACTIVE}
        - BOOTSTRAP_HASKELL_VERBOSE=${BOOTSTRAP_HASKELL_VERBOSE}
        - BOOTSTRAP_HASKELL_ADJUST_BASHRC=${BOOTSTRAP_HASKELL_ADJUST_BASHRC}
    depends_on:
      - xdg
  nvm:
    image: nvm-build
    container_name: nvm-build
    #command: tail -f /dev/null
    build:
      dockerfile: Dockerfile.nvm
      tags:
        - nvm-build
      args:
        - XDG_HOME=${XDG_HOME}
        - XDG_BIN_HOME=${XDG_BIN_HOME}
        - XDG_CONFIG_HOME=${XDG_CONFIG_HOME}
        - XDG_DATA_HOME=${XDG_DATA_HOME}
        - XDG_CACHE_HOME=${XDG_CACHE_HOME}
        - NVM_VERSION=${NVM_VERSION}
    depends_on:
      - xdg
  clj-kondo:
    image: clj-kondo
    container_name: clj-kondo
    command: tail -f /dev/null
    build:
      dockerfile: Dockerfile.clj-kondo
      tags:
        - clj-kondo
      args:
        - XDG_HOME=${XDG_HOME}
        - XDG_BIN_HOME=${XDG_BIN_HOME}
        - XDG_CONFIG_HOME=${XDG_CONFIG_HOME}
        - XDG_DATA_HOME=${XDG_DATA_HOME}
        - XDG_CACHE_HOME=${XDG_CACHE_HOME}
        - CLJ_KONDO_DIR=${CLJ_KONDO_DIR}
    depends_on:
      - xdg
  jdk:
    image: jdk
    container_name: jdk
    command: tail -f /dev/null
    build:
      dockerfile: Dockerfile.jdk
      tags:
        - jdk
      args:
        - XDG_HOME=${XDG_HOME}
        - XDG_BIN_HOME=${XDG_BIN_HOME}
        - XDG_CONFIG_HOME=${XDG_CONFIG_HOME}
        - XDG_DATA_HOME=${XDG_DATA_HOME}
        - XDG_CACHE_HOME=${XDG_CACHE_HOME}
        - JAVA_HOME=${JAVA_HOME}
        - JDK_BINARY_URL=${JDK_BINARY_URL}
    environment:
      - PATH=${PATH_BASE}
    depends_on:
      - xdg
  clojure:
    image: clojure
    container_name: clojure
    command: tail -f /dev/null
    build:
      dockerfile: Dockerfile.clojure
      tags:
        - clojure
      args:
        - XDG_HOME=${XDG_HOME}
        - XDG_BIN_HOME=${XDG_BIN_HOME}
        - XDG_CONFIG_HOME=${XDG_CONFIG_HOME}
        - XDG_DATA_HOME=${XDG_DATA_HOME}
        - XDG_CACHE_HOME=${XDG_CACHE_HOME}
        - CLOJURE_DIR=${CLOJURE_DIR}
        - JAVA_HOME=${JAVA_HOME}
    environment:
      - JAVA_HOME=${JAVA_HOME}
      - PATH=${PATH_BASE}
    depends_on:
      - jdk
  go:
    image: go
    container_name: go
    command: tail -f /dev/null
    build:
      dockerfile: Dockerfile.go
      tags:
        - go
      args:
        - XDG_HOME=${XDG_HOME}
        - XDG_BIN_HOME=${XDG_BIN_HOME}
        - XDG_CONFIG_HOME=${XDG_CONFIG_HOME}
        - XDG_DATA_HOME=${XDG_DATA_HOME}
        - XDG_CACHE_HOME=${XDG_CACHE_HOME}
        - GO_DIR=${GO_DIR}
        - GO_VERSION=${GO_VERSION}
        - GOROOT=${GOROOT}
        - GOPATH=${GOPATH}
        - GOBIN=${GOBIN}
    environment:
      - PATH=${PATH_BASE}
    depends_on:
      - xdg
  joker:
    image: joker
    container_name: joker
    #command: tail -f /dev/null
    build:
      dockerfile: Dockerfile.joker
      tags:
        - joker
      args:
        - XDG_HOME=${XDG_HOME}
        - XDG_BIN_HOME=${XDG_BIN_HOME}
        - XDG_CONFIG_HOME=${XDG_CONFIG_HOME}
        - XDG_DATA_HOME=${XDG_DATA_HOME}
        - XDG_CACHE_HOME=${XDG_CACHE_HOME}
        - GO_DIR=${GO_DIR}
        - GO_VERSION=${GO_VERSION}
        - GOROOT=${GOROOT}
        - GOPATH=${GOPATH}
        - GOBIN=${GOBIN}
        - PATH=${PATH_BASE}
    environment:
      - XDG_HOME=${XDG_HOME}
      - XDG_BIN_HOME=${XDG_BIN_HOME}
      - XDG_CONFIG_HOME=${XDG_CONFIG_HOME}
      - XDG_DATA_HOME=${XDG_DATA_HOME}
      - XDG_CACHE_HOME=${XDG_CACHE_HOME}
      - GO_DIR=${GO_DIR}
      - GO_VERSION=${GO_VERSION}
      - GOROOT=${GOROOT}
      - GOPATH=${GOPATH}
      - GOBIN=${GOBIN}
      - PATH=${PATH_BASE}
    depends_on:
      - go
  docker-lsp:
    image: docker-lsp-build
    container_name: docker-lsp-build
    #command: tail -f /dev/null
    build:
      dockerfile: Dockerfile.docker-lsp
      tags:
        - docker-lsp-build
      args:
        - XDG_HOME=${XDG_HOME}
        - XDG_BIN_HOME=${XDG_BIN_HOME}
        - XDG_CONFIG_HOME=${XDG_CONFIG_HOME}
        - XDG_DATA_HOME=${XDG_DATA_HOME}
        - XDG_CACHE_HOME=${XDG_CACHE_HOME}
        - NODE_VERSION=${NODE_VERSION}
        - NVM_DIR=${NVM_DIR}
    depends_on:
      - nvm
  spellcheck:
    image: spellcheck-build
    container_name: spellcheck-build
    #command: tail -f /dev/null
    build:
      dockerfile: Dockerfile.spellcheck
      tags:
        - spellcheck-build
      args:
        - XDG_HOME=${XDG_HOME}
        - XDG_BIN_HOME=${XDG_BIN_HOME}
        - XDG_CONFIG_HOME=${XDG_CONFIG_HOME}
        - XDG_DATA_HOME=${XDG_DATA_HOME}
        - XDG_CACHE_HOME=${XDG_CACHE_HOME}
    depends_on:
      - haskell
  hadolint:
    image: hadolint-build
    container_name: hadolint-build
    #command: tail -f /dev/null
    build:
      dockerfile: Dockerfile.hadolint
      tags:
        - hadolint-build
      args:
        - XDG_HOME=${XDG_HOME}
        - XDG_BIN_HOME=${XDG_BIN_HOME}
        - XDG_CONFIG_HOME=${XDG_CONFIG_HOME}
        - XDG_DATA_HOME=${XDG_DATA_HOME}
        - XDG_CACHE_HOME=${XDG_CACHE_HOME}
    depends_on:
      - haskell
      - spellcheck
  spacedock-docker:
    image: spacedock-docker
    container_name: spacedock-docker
    #command: tail -f /dev/null
    build:
      dockerfile: Dockerfile.spacedock-docker
      tags:
        - spacedock-docker
      args:
        - XDG_HOME=${XDG_HOME}
        - XDG_BIN_HOME=${XDG_BIN_HOME}
        - XDG_CONFIG_HOME=${XDG_CONFIG_HOME}
        - XDG_DATA_HOME=${XDG_DATA_HOME}
        - XDG_CACHE_HOME=${XDG_CACHE_HOME}
        - NVM_DIR=${NVM_DIR}
    depends_on:
      - hadolint
      - docker-lsp
  project-mlir:
    image: project-mlir
    container_name: project-mlir
    command: tail -f /dev/null
    build:
      dockerfile: Dockerfile.mlir
      tags:
        - project-mlir
      args:
        - XDG_HOME=${XDG_HOME}
        - XDG_BIN_HOME=${XDG_BIN_HOME}
        - XDG_CONFIG_HOME=${XDG_CONFIG_HOME}
        - XDG_DATA_HOME=${XDG_DATA_HOME}
        - XDG_CACHE_HOME=${XDG_CACHE_HOME}
        - EMACS_DIR=${EMACS_DIR}
        - NVM_DIR=${NVM_DIR}
    shm_size: 2g
    privileged: true
    devices:
      - /dev/nvidia0:/dev/nvidia0
    environment:
      - DISPLAY=${DISPLAY}
    stdin_open: true
    tty: true
    volumes:
      - / var/run/docker.sock:/var/run/docker.sock
      - /tmp/.X11-unix:/tmp/.X11-unix
    depends_on:
      - emacs
      - spacedock-docker

# https://github.com/syl20bnr/spacemacs/tree/develop/layers/+tools/docker
# for the spacedock-docker
# docker-ce-cli
# 
