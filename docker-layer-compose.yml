# depends on docker-layer.env
version: '3.8'
services:

  # ============================================================================
  # core

  xdg:
    image: xdg
    container_name: xdg
    #command: tail -f /dev/null
    build:
      dockerfile: Dockerfile.xdg
      tags:
        - xdg
      args:
        SPACEDOCK_XDG_HOME: ${SPACEDOCK_XDG_HOME}
        SPACEDOCK_XDG_BIN_HOME: ${SPACEDOCK_XDG_BIN_HOME}
        SPACEDOCK_XDG_CONFIG_HOME: ${SPACEDOCK_XDG_CONFIG_HOME}
        SPACEDOCK_XDG_DATA_HOME: ${SPACEDOCK_XDG_DATA_HOME}
        SPACEDOCK_XDG_CACHE_HOME: ${SPACEDOCK_XDG_CACHE_HOME}
    env_file:
     - xdg.env

  # ============================================================================
  # layer

  docker-layer:
    image: docker-layer
    container_name: docker-layer
    #command: tail -f /dev/null
    build:
      dockerfile: Dockerfile.docker-layer
      tags:
        - docker-layer
      args:
        LAYER_NAME: docker
        LAYER_TYPE: tools
        NVM_DIR: ${SPACEDOCK_NVM_DIR}
        CABAL_DIR: ${SPACEDOCK_CABAL_DIR}
        NVM_VERSION: 0.39.3
        NODE_VERSION: 20.13.1
    depends_on:
      xdg:
        required: true
        condition: service_completed_successfully
      docker-lsp:
        required: true
        condition: service_completed_successfully
      hadolint:
        required: true
        condition: service_completed_successfully

  # ============================================================================
  # layer deps

  docker-lsp:
    image: docker-lsp
    container_name: docker-lsp
    #command: tail -f /dev/null
    build:
      dockerfile: Dockerfile.docker-lsp
      tags:
        - docker-lsp
      args:
        NVM_DIR: ${SPACEDOCK_NVM_DIR}
    depends_on:
      node:
        required: true
        condition: service_completed_successfully

  hadolint:
    image: hadolint
    container_name: hadolint
    #command: tail -f /dev/null
    build:
      dockerfile: Dockerfile.hadolint
      tags:
        - hadolint
      args:
        XDG_BIN_HOME: ${SPACEDOCK_XDG_BIN_HOME}
        XDG_CONFIG_HOME: ${SPACEDOCK_XDG_CONFIG_HOME}
        CABAL_DIR: ${SPACEDOCK_CABAL_DIR}
    depends_on:
      shellcheck:
        required: true
        condition: service_completed_successfully

  # ============================================================================
  # build deps

  node:
    image: node
    container_name: node
    #command: tail -f /dev/null
    build:
      dockerfile: Dockerfile.node
      tags:
        - node
      args:
        NVM_DIR: ${SPACEDOCK_NVM_DIR}
        NVM_VERSION: 0.39.3
        NODE_VERSION: 20.13.1
    depends_on:
      xdg:
        required: true
        condition: service_completed_successfully

  shellcheck:
    image: shellcheck
    container_name: shellcheck
    command: #tail -f /dev/null
    build:
      dockerfile: Dockerfile.shellcheck
      tags:
        - shellcheck
      args:
        XDG_BIN_HOME: ${SPACEDOCK_XDG_BIN_HOME}
        CABAL_DIR: ${SPACEDOCK_CABAL_DIR}
    depends_on:
      cabal:
        required: true
        condition: service_completed_successfully

  cabal:
    image: cabal
    container_name: cabal
    #command: tail -f /dev/null
    build:
      dockerfile: Dockerfile.cabal
      tags:
        - cabal
      args:
        XDG_BIN_HOME: ${SPACEDOCK_XDG_BIN_HOME}
        XDG_CONFIG_HOME: ${SPACEDOCK_XDG_CONFIG_HOME}
        XDG_DATA_HOME: ${SPACEDOCK_XDG_DATA_HOME}
        CABAL_DIR: ${SPACEDOCK_CABAL_DIR}
        BOOTSTRAP_HASKELL_NONINTERACTIVE: 1
        GHCUP_USE_XDG_DIRS: 1
        BOOTSTRAP_HASKELL_VERBOSE: 1
        BOOTSTRAP_HASKELL_ADJUST_BASHRC: 1
    depends_on:
      xdg:
        required: true
        condition: service_completed_successfully





  # llvm:
  #   image: llvm
  #   container_name: llvm
  #   command: tail -f /dev/null
  #   build:
  #     dockerfile: Dockerfile.llvm
  #     tags:
  #       - llvm
  #     args:
  #       - XDG_HOME=${XDG_HOME}
  #       - XDG_BIN_HOME=${XDG_BIN_HOME}
  #       - XDG_CONFIG_HOME=${XDG_CONFIG_HOME}
  #       - XDG_DATA_HOME=${XDG_DATA_HOME}
  #       - XDG_CACHE_HOME=${XDG_CACHE_HOME}
  #       - LLVM_VERSION=${LLVM_VERSION}
  #       - NVIDIA_BASE_IMAGE=${NVIDIA_BASE_IMAGE}
  #   depends_on:
  #     - xdg

  # clj-kondo:
  #   image: clj-kondo
  #   container_name: clj-kondo
  #   command: tail -f /dev/null
  #   build:
  #     dockerfile: Dockerfile.clj-kondo
  #     tags:
  #       - clj-kondo
  #     args:
  #       - XDG_HOME=${XDG_HOME}
  #       - XDG_BIN_HOME=${XDG_BIN_HOME}
  #       - XDG_CONFIG_HOME=${XDG_CONFIG_HOME}
  #       - XDG_DATA_HOME=${XDG_DATA_HOME}
  #       - XDG_CACHE_HOME=${XDG_CACHE_HOME}
  #       - CLJ_KONDO_DIR=${CLJ_KONDO_DIR}
  #   depends_on:
  #     - xdg
  # jdk:
  #   image: jdk
  #   container_name: jdk
  #   command: tail -f /dev/null
  #   build:
  #     dockerfile: Dockerfile.jdk
  #     tags:
  #       - jdk
  #     args:
  #       - XDG_HOME=${XDG_HOME}
  #       - XDG_BIN_HOME=${XDG_BIN_HOME}
  #       - XDG_CONFIG_HOME=${XDG_CONFIG_HOME}
  #       - XDG_DATA_HOME=${XDG_DATA_HOME}
  #       - XDG_CACHE_HOME=${XDG_CACHE_HOME}
  #       - JAVA_HOME=${JAVA_HOME}
  #       - JDK_BINARY_URL=${JDK_BINARY_URL}
  #   environment:
  #     - PATH=${PATH_BASE}
  #   depends_on:
  #     - xdg
  # clojure:
  #   image: clojure
  #   container_name: clojure
  #   command: tail -f /dev/null
  #   build:
  #     dockerfile: Dockerfile.clojure
  #     tags:
  #       - clojure
  #     args:
  #       - XDG_HOME=${XDG_HOME}
  #       - XDG_BIN_HOME=${XDG_BIN_HOME}
  #       - XDG_CONFIG_HOME=${XDG_CONFIG_HOME}
  #       - XDG_DATA_HOME=${XDG_DATA_HOME}
  #       - XDG_CACHE_HOME=${XDG_CACHE_HOME}
  #       - CLOJURE_DIR=${CLOJURE_DIR}
  #       - JAVA_HOME=${JAVA_HOME}
  #   environment:
  #     - JAVA_HOME=${JAVA_HOME}
  #     - PATH=${PATH_BASE}
  #   depends_on:
  #     - jdk
  # go:
  #   image: go
  #   container_name: go
  #   command: tail -f /dev/null
  #   build:
  #     dockerfile: Dockerfile.go
  #     tags:
  #       - go
  #     args:
  #       - XDG_HOME=${XDG_HOME}
  #       - XDG_BIN_HOME=${XDG_BIN_HOME}
  #       - XDG_CONFIG_HOME=${XDG_CONFIG_HOME}
  #       - XDG_DATA_HOME=${XDG_DATA_HOME}
  #       - XDG_CACHE_HOME=${XDG_CACHE_HOME}
  #       - GO_DIR=${GO_DIR}
  #       - GO_VERSION=${GO_VERSION}
  #       - GOROOT=${GOROOT}
  #       - GOPATH=${GOPATH}
  #       - GOBIN=${GOBIN}
  #   environment:
  #     - PATH=${PATH_BASE}
  #   depends_on:
  #     - xdg
  # joker:
  #   image: joker
  #   container_name: joker
  #   #command: tail -f /dev/null
  #   build:
  #     dockerfile: Dockerfile.joker
  #     tags:
  #       - joker
  #     args:
  #       - XDG_HOME=${XDG_HOME}
  #       - XDG_BIN_HOME=${XDG_BIN_HOME}
  #       - XDG_CONFIG_HOME=${XDG_CONFIG_HOME}
  #       - XDG_DATA_HOME=${XDG_DATA_HOME}
  #       - XDG_CACHE_HOME=${XDG_CACHE_HOME}
  #       - GO_DIR=${GO_DIR}
  #       - GO_VERSION=${GO_VERSION}
  #       - GOROOT=${GOROOT}
  #       - GOPATH=${GOPATH}
  #       - GOBIN=${GOBIN}
  #       - PATH=${PATH_BASE}
  #   environment:
  #     - XDG_HOME=${XDG_HOME}
  #     - XDG_BIN_HOME=${XDG_BIN_HOME}
  #     - XDG_CONFIG_HOME=${XDG_CONFIG_HOME}
  #     - XDG_DATA_HOME=${XDG_DATA_HOME}
  #     - XDG_CACHE_HOME=${XDG_CACHE_HOME}
  #     - GO_DIR=${GO_DIR}
  #     - GO_VERSION=${GO_VERSION}
  #     - GOROOT=${GOROOT}
  #     - GOPATH=${GOPATH}
  #     - GOBIN=${GOBIN}
  #     - PATH=${PATH_BASE}
  #   depends_on:
  #     - go



  # spacedock-docker:
  #   image: spacedock-docker
  #   container_name: spacedock-docker
  #   #command: tail -f /dev/null
  #   build:
  #     dockerfile: Dockerfile.spacedock-docker
  #     tags:
  #       - spacedock-docker
  #     args:
  #       - XDG_HOME=${XDG_HOME}
  #       - XDG_BIN_HOME=${XDG_BIN_HOME}
  #       - XDG_CONFIG_HOME=${XDG_CONFIG_HOME}
  #       - XDG_DATA_HOME=${XDG_DATA_HOME}
  #       - XDG_CACHE_HOME=${XDG_CACHE_HOME}
  #       - NVM_DIR=${NVM_DIR}
  #   depends_on:
  #     - hadolint
  #     #- docker-lsp
  # project-mlir:
  #   image: project-mlir
  #   container_name: project-mlir
  #   command: tail -f /dev/null
  #   build:
  #     dockerfile: Dockerfile.mlir
  #     tags:
  #       - project-mlir
  #     args:
  #       - XDG_HOME=${XDG_HOME}
  #       - XDG_BIN_HOME=${XDG_BIN_HOME}
  #       - XDG_CONFIG_HOME=${XDG_CONFIG_HOME}
  #       - XDG_DATA_HOME=${XDG_DATA_HOME}
  #       - XDG_CACHE_HOME=${XDG_CACHE_HOME}
  #       - EMACS_DIR=${EMACS_DIR}
  #       - NVM_DIR=${NVM_DIR}
  #   shm_size: 2g
  #   privileged: true
  #   devices:
  #     - /dev/nvidia0:/dev/nvidia0
  #   environment:
  #     - DISPLAY=${DISPLAY}
  #   stdin_open: true
  #   tty: true
  #   volumes:
  #     - / var/run/docker.sock:/var/run/docker.sock
  #     - /tmp/.X11-unix:/tmp/.X11-unix
  #   depends_on:
  #     - emacs
  #     - spacedock-docker

# https://github.com/syl20bnr/spacemacs/tree/develop/layers/+tools/docker
# for the spacedock-docker
# docker-ce-cli
# 
