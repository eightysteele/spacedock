# docker compose -f compose-emmy-spok.yml up -d --build emmy-spok
# docker compose exec emmy-spok /usr/local/bin/entrypoint.sh

services:
  emmy-spok:
    image: emmy-spok
    container_name: emmy-spok
    command: ${__COMPOSE_COMMAND}
    build:
      dockerfile: Dockerfile.emmy-spok
      tags:
        - emmy-spok
      args:
        XDG_HOME: ${__XDG_HOME}
        EMACS_DIR: ${__EMACS_DIR}
        NVM_DIR: ${__NVM_HOME}
        CLJ_KONDO_DIR: ${__CLJ_KONDO_DIR}
        JAVA_HOMR: ${__JAVA_HOME}
        CLOJURE_DIR: ${__CLOJURE_DIR}
        GOROOT: ${__GOROOT}
        # these are pulled from the user shell environment!
        ORGMODE_TOKEN: ${ORG_TOKEN}
        ORGMODE_REPO: ${ORG_REPO}
        GH_USER_NAME: ${GH_USER_NAME}
        GH_USER_EMAIL: ${GH_USER_EMAIL}
        SPACEMACS_D_REPO: ${SPACEMACS_D_REPO}
    depends_on:
      xdg:
        required: true
        condition: ${__COMPOSE_CONDITION}
      emacs:
        required: true
        condition: ${__COMPOSE_CONDITION}
      gpu-layer:
        required: true
        condition: ${__COMPOSE_CONDITION}
      docker-layer:
        required: true
        condition: ${__COMPOSE_CONDITION}
      clojure-layer:
        required: true
        condition: ${__COMPOSE_CONDITION}
    env_file: emmy-spok.env
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              device_ids: ['0']
              capabilities: [gpu]
    stdin_open: true
    tty: true
    shm_size: 2g
    privileged: true
    volumes:
      - emmy-spok-emacs-cache:/opt/xdg/.config/emacs/.cache
      - emmy-spok-emacs-eln-cache:/opt/xdg/.config/emacs/eln-cache
      - emmy-spok-emacs-elpa:/opt/xdg/.config/emacs/elpa
      - emmy-spok-emacs-quelpa:/opt/xdg/.config/emacs/quelpa
      - emmy-spok-emacs-org-roam:/opt/xdg/.config/emacs/org-roam
      - emmy-spok-code:/code
      - emmy-spok-m2:/home/root/.m2
      - /tmp/.X11-unix:/tmp/.X11-unix
      - /tmp/emacs1000:/tmp/emacs1000

  # ============================================================================
  # xdg
  # ============================================================================

  xdg:
    image: xdg
    container_name: xdg
    command: ${__COMPOSE_COMMAND}
    build:
      dockerfile: Dockerfile.xdg
      tags:
        - xdg
      args:
        XDG_HOME: ${__XDG_HOME}

  # ============================================================================
  # emacs
  # ============================================================================

  emacs:
    image: emacs
    container_name: emacs
    command: ${__COMPOSE_COMMAND}
    build:
      dockerfile: Dockerfile.emacs
      tags:
        - emacs
      args:
        EMACS_DIR: ${__EMACS_DIR}
        EMACS_VERSION: 29.3
    env_file:
      - emacs.env
    depends_on:
      xdg:
        required: true
        condition: ${__COMPOSE_CONDITION}

  # ============================================================================
  # gpu layer
  # ============================================================================

  gpu-layer:
    image: gpu-layer
    container_name: gpu-layer
    command: ${__COMPOSE_COMMAND}
    build:
      dockerfile: Dockerfile.gpu-layer
      tags:
        - gpu-layer
      args:
        LLVM_VERSION: 18
        NVIDIA_BASE_IMAGE: nvidia/cuda:12.4.1-cudnn-devel-ubuntu22.04
    depends_on:
      xdg:
        required: true
        condition: ${__COMPOSE_CONDITION}

  # ============================================================================
  # clojure layer
  # ============================================================================

  clojure-layer:
    image: clojure-layer
    container_name: clojure-layer
    command: ${__COMPOSE_COMMAND}
    build:
      dockerfile: Dockerfile.clojure-layer
      tags:
        - clojure-layer
      args:
        LAYER_NAME: clojure
        LAYER_TYPE: lang
        CLJ_KONDO_DIR: ${__CLJ_KONDO_DIR}
        JAVA_HOME: ${__JAVA_HOME}
        CLOJURE_DIR: ${__CLOJURE_DIR}
        GOROOT: ${__GOROOT} 
    depends_on:
      xdg:
        required: true
        condition: ${__COMPOSE_CONDITION}
      clj-kondo:
        required: true
        condition: ${__COMPOSE_CONDITION}
      joker:
        required: true
        condition: ${__COMPOSE_CONDITION}
      clojure:
        required: true
        condition: ${__COMPOSE_CONDITION}

  # ----------------------------------------------------------------------------
  # clojure layer dependencies
  # ----------------------------------------------------------------------------

  clj-kondo:
    image: clj-kondo
    container_name: clj-kondo
    command: ${__COMPOSE_COMMAND}
    build:
      dockerfile: Dockerfile.clj-kondo
      tags:
        - clj-kondo
      args:
        CLJ_KONDO_DIR: ${__CLJ_KONDO_DIR}
    depends_on:
      xdg:
        required: true
        condition: ${__COMPOSE_CONDITION}

  joker:
    image: joker
    container_name: joker
    command: ${__COMPOSE_COMMAND}
    build:
      dockerfile: Dockerfile.joker
      tags:
        - joker
      args:
        GOROOT: ${__GOROOT}
    depends_on:
      go:
        required: true
        condition: ${__COMPOSE_CONDITION}

  # ----------------------------------------------------------------------------
  # clojure layer build dependencies
  # ----------------------------------------------------------------------------

  go:
    image: go
    container_name: go
    command: ${__COMPOSE_COMMAND}
    build:
      dockerfile: Dockerfile.go
      tags:
        - go
      args:
        GO_VERSION: 1.21.6
        GOROOT: ${__GOROOT}
    depends_on:
      xdg:
        required: true
        condition: ${__COMPOSE_CONDITION}

  # ----------------------------------------------------------------------------
  # clojure layer runtime dependencies
  # ----------------------------------------------------------------------------

  jdk:
    image: jdk
    container_name: jdk
    command: ${__COMPOSE_COMMAND}
    build:
      dockerfile: Dockerfile.jdk
      tags:
        - jdk
      args:
        JAVA_HOME: ${__JAVA_HOME}
        JDK_MAJOR_VERSION: 21
        JDK_MINOR_VERSION: 0.3
        JDK_BUILD_NUMBER: 9
    depends_on:
      xdg:
        required: true
        condition: ${__COMPOSE_CONDITION}

  clojure:
    image: clojure
    container_name: clojure
    command: ${__COMPOSE_COMMAND}
    build:
      dockerfile: Dockerfile.clojure
      tags:
        - clojure
      args:
        CLOJURE_DIR: ${__CLOJURE_DIR}
        JAVA_HOME: ${__JAVA_HOME}
    depends_on:
      jdk:
        required: true
        condition: ${__COMPOSE_CONDITION}

  # ============================================================================
  # docker layer
  # ============================================================================

  docker-layer:
    image: docker-layer
    container_name: docker-layer
    command: ${__COMPOSE_COMMAND}
    build:
      dockerfile: Dockerfile.docker-layer
      tags:
        - docker-layer
      args:
        LAYER_NAME: docker
        LAYER_TYPE: tools
        NVM_DIR: ${__NVM_HOME}
        CABAL_DIR: ${__CABAL_HOME}
    depends_on:
      xdg:
        required: true
        condition: ${__COMPOSE_CONDITION}
      docker-lsp:
        required: true
        condition: ${__COMPOSE_CONDITION}
      hadolint:
        required: true
        condition: ${__COMPOSE_CONDITION}

  # ----------------------------------------------------------------------------
  # docker layer dependencies
  # ----------------------------------------------------------------------------

  docker-lsp:
    image: docker-lsp
    container_name: docker-lsp
    command: ${__COMPOSE_COMMAND}
    build:
      dockerfile: Dockerfile.docker-lsp
      tags:
        - docker-lsp
      args:
        NVM_DIR: ${__NVM_HOME}
    depends_on:
      node:
        required: true
        condition: ${__COMPOSE_CONDITION}

  hadolint:
    image: hadolint
    container_name: hadolint
    command: ${__COMPOSE_COMMAND}
    build:
      dockerfile: Dockerfile.hadolint
      tags:
        - hadolint
      args:
        CABAL_DIR: ${__CABAL_HOME}
        XDG_HOME: ${__XDG_HOME}
    depends_on:
      shellcheck:
        required: true
        condition: ${__COMPOSE_CONDITION}

  # ----------------------------------------------------------------------------
  # docker layer build dependencies
  # ----------------------------------------------------------------------------

  node:
    image: node
    container_name: node
    command: ${__COMPOSE_COMMAND}
    build:
      dockerfile: Dockerfile.node
      tags:
        - node
      args:
        NVM_DIR: ${__NVM_HOME}
        NVM_VERSION: 0.39.3
        NODE_VERSION: 20.13.1
    depends_on:
      xdg:
        required: true
        condition: ${__COMPOSE_CONDITION}

  shellcheck:
    image: shellcheck
    container_name: shellcheck
    command: ${__COMPOSE_COMMAND}
    build:
      dockerfile: Dockerfile.shellcheck
      tags:
        - shellcheck
      args:
        CABAL_DIR: ${__CABAL_HOME}
        XDG_HOME: ${__XDG_HOME}
    depends_on:
      cabal:
        required: true
        condition: ${__COMPOSE_CONDITION}

  cabal:
    image: cabal
    container_name: cabal
    command: ${__COMPOSE_COMMAND}
    build:
      dockerfile: Dockerfile.cabal
      tags:
        - cabal
      args:
        CABAL_DIR: ${__CABAL_HOME}
        XDG_HOME: ${__XDG_HOME}
    depends_on:
      xdg:
        required: true
        condition: ${__COMPOSE_CONDITION}

# ----------------------------------------------------------------------------
# volumes
# ----------------------------------------------------------------------------

volumes:
  emmy-spok-emacs-cache:
  emmy-spok-emacs-eln-cache:
  emmy-spok-emacs-elpa:
  emmy-spok-emacs-quelpa:
  emmy-spok-emacs-org-roam:
  emmy-spok-code:
  emmy-spok-m2:
